package model;

import java.util.ArrayList;

import com.smartfoxserver.v2.protocol.serialization.SerializableSFSType;


/**
 * PlayedPile class definition.
 * Generated by the TouchCORE code generator.
 */
public class PlayedPile implements SerializableSFSType {
    
    public static PlayedPile instance;
    public ArrayList<ActionCard> playedCards = new ArrayList<ActionCard>(); //CONVENTION FOR DECK: POSITION DECK.SIZE() IS TOP OF DECK, POSITION 0 IS BOTTOM OF DECK
    
  
    //--EMPTY CONSTRUCTOR FOR SERIALIZATION--
    public PlayedPile() { }
    
    public void addPlayedCardsAt(int index, ActionCard a) {
        boolean contains = playedCards.contains(a);
        if (contains) {
            return;
        }
        this.playedCards.add(index, a);
    }

    /**
     * 
     * @param index must be less than playedCards.size()
     * @return the removed action card
     */
    public ActionCard removePlayedCardsAt(int index) {
    	assert index < this.playedCards.size();
    	return playedCards.remove(index);
    }

    public ActionCard getPlayedCardsAt(int index) {
        if (this.playedCards.size() > index) {
            return this.playedCards.get(index);
        }
	return null;
    }

    public void addPlayedCards(ActionCard a) {
        boolean contains = this.playedCards.contains(a);
        if (contains) {
            return;
        }
        this.playedCards.add(a);
    }

    public void removePlayedCards(ActionCard a) {
        if (this.playedCards.contains(a)){
            playedCards.remove(a);
        }
    }

    public boolean containsPlayedCards(ActionCard a) {
        boolean contains = this.playedCards.contains(a);
        return contains;
    }

    public int sizeOfPlayedCards() {
        int size = this.playedCards.size();
        return size;
    }

    public ArrayList<ActionCard> getPlayedCards() {
        return this.playedCards;
    }
    
    public ActionCard takeTopCard() {
    	return this.removePlayedCardsAt(this.playedCards.size()-1);
    }

    public static PlayedPile getInstance() {
		if (instance == null) {
			instance = new PlayedPile();
		}
		return instance;
	}
}
